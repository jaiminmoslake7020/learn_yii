<?php

namespace frontend\models;

use Yii;
use yii\behaviors\TimestampBehavior;


/**
 * This is the model class for table "user".
 *
 * @property integer $id
 * @property string $username
 * @property string $email
 * @property string $birth_date
 * @property string $password_hash
 * @property integer $status
 * @property string $auth_key
 * @property string $password_reset_token
 * @property string $account_activation_token
 * @property integer $created_at
 * @property integer $updated_at
 *
 * @property Article[] $articles
 */
class User extends \yii\db\ActiveRecord
{
    public $password ;
    public $confirm_password;



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user';
    }

    public function behaviors()
    {
        return [
            TimestampBehavior::className()
        ]; // TODO: Change the autogenerated stub
    }


    public function beforeSave($insert)
    {
        if($insert)
        {
             $password_hash = Yii::$app->security->generatePasswordHash($this->password);

             $randomString = Yii::$app->security->generateRandomString();
             $randomString1 = Yii::$app->security->generateRandomString();

             $this->status = 1 ;
             $this->auth_key = $randomString ;
             $this->account_activation_token = $randomString1 ;
             $this->password_hash = $password_hash ;
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [

/*
            [
                [],attributes array
                validatorType,
                options
            ],
*/

            [['password', 'username','confirm_password','email', 'birth_date'], 'required'],


            [['birth_date'], 'safe'],
            [['confirm_password'], 'compare','compareAttribute'=>'password'],

            [['birth_date'], 'date','format'=>'php:Y-m-d', 'max'=>(time()-(12*365*24*60*60)), 'tooBig'=>'{attribute} should be less then '.date('Y-m-d',(time()-(12*365*24*60*60))) ],


            [['status', 'created_at', 'updated_at'], 'integer'],
            [['username', 'email', 'password_hash', 'password_reset_token', 'account_activation_token'], 'string', 'max' => 255],
            [['auth_key'], 'string', 'max' => 32],
            [['username'], 'unique'],


            [['email'], 'email'],
            [['email'], 'unique'],


            [['password_reset_token'], 'unique'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'username' => 'Username',
            'email' => 'Email',
            'birth_date' => 'Birth Date',
            'password_hash' => 'Password Hash',
            'status' => 'Status',
            'auth_key' => 'Auth Key',
            'password_reset_token' => 'Password Reset Token',
            'account_activation_token' => 'Account Activation Token',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getArticles()
    {
        return $this->hasMany(Article::className(), ['user_id' => 'id']);
    }
}
